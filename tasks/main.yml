---

- name: Add Prometheus Helm charts repository
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Create a list of targets with node-exporter for all hosts
  set_fact:
    targets_os: { targets: ['{{ item.value.ansible_host }}:9100'], labels: { instance: '{{ item.value.kypo_global_sandbox_name }}-{{ item.value.inventory_hostname }}', sandbox: '{{ item.value.kypo_global_sandbox_name }}'}}
  loop: "{{ hostvars | dict2items }}"
  register: target_list_os_all
  when: (groups["monitor-os"] is defined) and (groups["monitor-os"]|length == 0)

- name: Create a list of targets with node-exporter for monitor-os group
  set_fact:
    targets_os: { targets: ['{{ hostvars[item]["ansible_host"] }}:9100'], labels: { instance: '{{ hostvars[item]["kypo_global_sandbox_name"] }}-{{ hostvars[item]["inventory_hostname"] }}', sandbox: '{{ hostvars[item]["kypo_global_sandbox_name"] }}'}}
  loop: "{{ groups['monitor-os'] }}"
  register: target_list_os_group
  when: (groups["monitor-os"] is defined) and (groups["monitor-os"]|length>0)

- name: Set target_list_os_all to target_list_os
  set_fact:
    target_list_os: "{{ target_list_os_all }}"
  when: target_list_os_all.results

- name: Set target_list_os_group to target_list_os
  set_fact:
    target_list_os: "{{ target_list_os_group }}"
  when: target_list_os_group.results

- name: Create a list of targets for icmp monitoring from all hosts
  set_fact:
    targets_icmp: { targets: ['{{ item.value.ansible_host }}'], labels: { instance: '{{ item.value.kypo_global_sandbox_name }}-{{ item.value.inventory_hostname }}', sandbox: '{{ item.value.kypo_global_sandbox_name }}'}}
  loop: "{{ hostvars | dict2items }}"
  register: target_list_icmp_all
  when: (groups["monitor-icmp"] is defined) and (groups["monitor-icmp"]|length == 0)

- name: Create a list of targets for icmp monitoring from monitor-icmp group
  set_fact:
    targets_icmp: { targets: ['{{ hostvars[item]["ansible_host"] }}'], labels: { instance: '{{ hostvars[item]["kypo_global_sandbox_name"] }}-{{ hostvars[item]["inventory_hostname"] }}', sandbox: '{{ hostvars[item]["kypo_global_sandbox_name"] }}'}}
  loop: "{{ groups['monitor-icmp'] }}"
  register: target_list_icmp_group
  when: (groups["monitor-icmp"] is defined) and (groups["monitor-icmp"]|length>0)

- name: Set target_list_icmp_all to target_list_icmp
  set_fact:
    target_list_icmp: "{{ target_list_icmp_all }}"
  when: target_list_icmp_all.results

- name: Set target_list_icmp_group to target_list_icmp
  set_fact:
    target_list_icmp: "{{ target_list_icmp_group }}"
  when: target_list_icmp_group.results

- name: Deploy prometheus
  kubernetes.core.helm:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    name: prometheus
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: prometheus
    wait: True
    atomic: True
    update_repo_cache: True
    create_namespace: True
    values:
      prometheus:
        service:
          type: LoadBalancer
        prometheusSpec:
          additionalScrapeConfigs:
            - job_name: "sandbox-{{ kypo_global_sandbox_allocation_unit_id }}"
              metrics_path: "/metrics"
              static_configs: "{{ target_list_os.results | map(attribute='ansible_facts.targets_os') | list }}"
            - job_name: "blackbox-icmp-sandbox-{{ kypo_global_sandbox_allocation_unit_id }}"
              metrics_path: "/probe"
              scrape_timeout: "15s"
              scrape_interval: "15s"
              params:
                module: [icmp]
              static_configs: "{{ target_list_icmp.results | default('') | map(attribute='ansible_facts.targets_icmp') | list }}"
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - target_label: __address__
                  replacement: prometheus-blackbox-exporter:9115
  register: result
  retries: 5
  delay: 10
  until: result is not failed
